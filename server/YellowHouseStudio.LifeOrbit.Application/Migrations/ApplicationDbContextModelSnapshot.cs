// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YellowHouseStudio.LifeOrbit.Application.Data;

#nullable disable

namespace YellowHouseStudio.LifeOrbit.Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YellowHouseStudio.LifeOrbit.Domain.Family.FamilyMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("YellowHouseStudio.LifeOrbit.Domain.Family.FamilyMember", b =>
                {
                    b.OwnsMany("YellowHouseStudio.LifeOrbit.Domain.Family.Allergy", "Allergies", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<string>("Allergen")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<Guid>("FamilyMemberId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Severity")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("FamilyMemberId");

                            b1.ToTable("Allergy");

                            b1.WithOwner()
                                .HasForeignKey("FamilyMemberId");
                        });

                    b.OwnsMany("YellowHouseStudio.LifeOrbit.Domain.Family.FoodPreference", "FoodPreferences", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<Guid>("FamilyMemberId")
                                .HasColumnType("uuid");

                            b1.Property<string>("FoodItem")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("Status")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("FamilyMemberId");

                            b1.ToTable("FoodPreference");

                            b1.WithOwner()
                                .HasForeignKey("FamilyMemberId");
                        });

                    b.OwnsMany("YellowHouseStudio.LifeOrbit.Domain.Family.SafeFood", "SafeFoods", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<Guid>("FamilyMemberId")
                                .HasColumnType("uuid");

                            b1.Property<string>("FoodItem")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("Id");

                            b1.HasIndex("FamilyMemberId");

                            b1.ToTable("SafeFood");

                            b1.WithOwner()
                                .HasForeignKey("FamilyMemberId");
                        });

                    b.Navigation("Allergies");

                    b.Navigation("FoodPreferences");

                    b.Navigation("SafeFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
